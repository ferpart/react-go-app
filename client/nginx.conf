server { 
  listen 80;
    server_name reactgo.ferpart.com;

    location /.well-known/acme-challenge/ {
      root /var/www/certbot;
    }

  location / {
  # This would be the directory where your React app's static files are stored at
    root /usr/share/nginx/html;
    try_files $uri $uri/ /index.html;
  }

  # golang api reverse proxy // the /api/ is assuming your api routes start with that i.e. www.your-site.com/api/endpoint
  location /api {
    proxy_set_header X-Real-IP $remote_addr;
    proxy_pass http://back-end:5000;
  }
}

server { 
  listen 443 ssl;
  server_name reactgo.ferpart.com;
  server_tokens off;

  ssl_certificate /etc/letsencrypt/live/reactgo.ferpart.com/fullchain.pem;
  ssl_certificate_key /etc/letsencrypt/live/reactgo.ferpart.com/privkey.pem;
  include /etc/letsencrypt/options-ssl-nginx.conf;
  ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem;

  location / {
    # This would be the directory where your React app's static files are stored at
    proxy_pass http://reactgo.ferpart.com;
    proxy_set_header    Host                $http_host;
    proxy_set_header    X-Real-IP           $remote_addr;
    proxy_set_header    X-Forwarded-For     $proxy_add_x_forwarded_for;
  }

  # golang api reverse proxy // the /api/ is assuming your api routes start with that i.e. www.your-site.com/api/endpoint
  location /api {
    proxy_set_header X-Real-IP $remote_addr;
    proxy_pass http://back-end:5000;
  }
}